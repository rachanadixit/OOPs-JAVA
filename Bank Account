import java.util.Scanner;
class Bank {
    String name;
    String accountNo;
    double balance;
    public Bank(String name, String accountNo, double balance) {
        this.name = name;
        this.accountNo = accountNo;
        this.balance = balance;
    }
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;

            System.out.println("Deposited: " + amount + ". New Balance: " + balance);
        } else {
            System.out.println("Invalid deposit amount.");
        }
    }
    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("Withdrew: " + amount + ". New Balance: " + balance);
        } else {
            System.out.println("Insufficient funds or invalid amount.");
        }
    }
    public void displayBalance() {
        System.out.println("Account Number: " + accountNo + ". Balance: " + balance);
    }
    public String getAccNo() {
        return accountNo;
    }
}
class BankApplication {
    static Bank[] accounts;
    static int numAccounts = 0;
    static Scanner sc = new Scanner(System.in);

    static Bank searchAccount(String accountNo) {
        for (int i = 0; i < numAccounts; i++) {
            if (accounts[i].getAccNo().equals(accountNo)) {
                return accounts[i];
            }
        }
        return null;
    }
    static void addAccount() {
        if (numAccounts >= accounts.length) {
            System.out.println("Cannot add more accounts. The bank is at full capacity.");
            return;
        }
        System.out.print("Enter account holder's name: ");
        String name = sc.next();
        System.out.print("Enter account number: ");
        String accNo = sc.next();
        System.out.print("Enter initial balance: ");
        double balance = sc.nextDouble();

        accounts[numAccounts++] = new Bank(name, accNo, balance);
        System.out.println("Account added successfully.");
    }
    static void removeAccount() {
        if (numAccounts <= 0) {
            System.out.println("No accounts to remove.");
            return;
        }
        System.out.print("Enter account number to remove: ");
        String accNo = sc.next();
        for (int i = 0; i < numAccounts; i++) {
            if (accounts[i].getAccNo().equals(accNo)) {
                for (int j = i; j < numAccounts - 1; j++) {
                    accounts[j] = accounts[j + 1];
                }
                accounts[--numAccounts] = null;
                System.out.println("Account removed successfully.");
                return;
            }
        }
        System.out.println("Account not found.");
    }
    static void performOperations() {
        System.out.println("Enter Account Number: ");
        String accNo = sc.next();
        Bank account = searchAccount(accNo);

        if (account != null) {
            while (true) {
                System.out.println("1. Deposit");
                System.out.println("2. Withdraw");
                System.out.println("3. Display Balance");
                System.out.println("4. Exit");
                System.out.print("Choose an option: ");
                int choice = sc.nextInt();

                switch (choice) {
                    case 1:
                        System.out.print("Enter deposit amount: ");
                        double deposit = sc.nextDouble();
                        account.deposit(deposit);
                        break;
                    case 2:
                        System.out.print("Enter withdrawal amount: ");
                        double withdraw = sc.nextDouble();
                        account.withdraw(withdraw);
                        break;
                    case 3:
                        account.displayBalance();
                        break;
                    case 4:
                        return;
                    default:
                        System.out.println("Invalid choice.");
                }
            }
        } else {
            System.out.println("Account not found.");
        }
    }
    public static void main(String[] args) {
        System.out.println("Enter the maximum number of accounts: ");
        int maxAccounts = sc.nextInt();
        accounts = new Bank[maxAccounts];

        while (true) {
            System.out.println("1. Add Account");
            System.out.println("2. Remove Account");
            System.out.println("3. Perform Operations");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");
            int choice = sc.nextInt();

            switch (choice) {
                case 1:
                    addAccount();
                    break;
                case 2:
                    removeAccount();
                    break;
                case 3:
                    performOperations();
                    break;
                case 4:
                    System.out.println("Exiting...");
                    return;
                default:
                    System.out.println("Invalid choice.");
            }
        }
    }
}
